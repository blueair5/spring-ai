package com.example.springai.other.bloomfilter;

/*
 * 布隆过滤器
 * 可以用到的场景是什么:
 * 可以将一个缓存的内容设置成一个布隆过滤器, 利用布隆过滤器判断一个 key 是否肯定不存在, 是快速返回
 *
 * 布隆过滤器的核心思想和价值就在于：
 * 牺牲一定的准确性（存在假阳性，即误判为存在）： 这是使用布隆过滤器的代价。
 * 大幅节省存储空间： 相比于存储元素的完整信息，布隆过滤器只需要一个很小的 bit 数组来表示集合。
 * 极大地提高查询效率： 判断元素是否“肯定不存在”的速度非常快，只需要进行几次哈希运算和简单的 bit 位检查，避免了昂贵的查找操作。
 */

public class MyBloomFilter {
}
